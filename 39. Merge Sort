void merge(vector<int> &arr, int &s, int &m, int &e) {

  int n1 = m - s + 1;

  int n2 = e - m;

  int a[n1];

  int b[n2];

  for (int i = 0; i < n1; i++) {

    a[i] = arr[s + i];
  }

  for (int i = 0; i < n2; i++) {

    b[i] = arr[m + 1 + i];
  }

  int i = 0;

  int k = s;

  int j = 0;

  while (i < n1 && j < n2) {

    if (a[i] < b[j]) {

      arr[k] = a[i];

      i++;

      k++;

    }

    else {

      arr[k] = b[j];

      k++;

      j++;
    }
  }

  while (i < n1) {

    arr[k] = a[i];

    i++;

    k++;
  }

  while (j < n2) {

    arr[k] = b[j];

    k++;

    j++;
  }
}

void ms(vector<int> &arr, int s, int e) {

  if (s < e) {

    int m = (s + e) / 2;

    ms(arr, s, m);

    ms(arr, m + 1, e);

    merge(arr, s, m, e);
  }
}

void mergeSort(vector<int> &arr, int n) {

  // Write your code here.

  ms(arr, 0, n - 1);
}
